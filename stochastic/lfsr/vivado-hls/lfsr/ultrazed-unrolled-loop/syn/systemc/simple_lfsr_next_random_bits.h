// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _simple_lfsr_next_random_bits_HH_
#define _simple_lfsr_next_random_bits_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct simple_lfsr_next_random_bits : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    simple_lfsr_next_random_bits(sc_module_name name);
    SC_HAS_PROCESS(simple_lfsr_next_random_bits);

    ~simple_lfsr_next_random_bits();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > r;
    sc_signal< sc_lv<32> > tmp_8_7_i_fu_318_p10;
    sc_signal< sc_lv<1> > tmp_9_fu_66_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_74_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_50_p3;
    sc_signal< sc_lv<1> > tmp_7_fu_58_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_112_p2;
    sc_signal< sc_lv<1> > tmp_fu_106_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_82_p3;
    sc_signal< sc_lv<1> > tmp_12_fu_90_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_98_p3;
    sc_signal< sc_lv<1> > tmp4_fu_130_p2;
    sc_signal< sc_lv<1> > tmp3_fu_124_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_150_p3;
    sc_signal< sc_lv<1> > tmp_14_fu_142_p3;
    sc_signal< sc_lv<1> > tmp7_fu_164_p2;
    sc_signal< sc_lv<1> > tmp6_fu_158_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_176_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_184_p3;
    sc_signal< sc_lv<1> > tmp1_fu_198_p2;
    sc_signal< sc_lv<1> > tmp9_fu_192_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_210_p3;
    sc_signal< sc_lv<1> > tmp5_fu_224_p2;
    sc_signal< sc_lv<1> > tmp2_fu_218_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_236_p3;
    sc_signal< sc_lv<1> > tmp10_fu_254_p2;
    sc_signal< sc_lv<1> > tmp8_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_266_p3;
    sc_signal< sc_lv<1> > tmp12_fu_280_p2;
    sc_signal< sc_lv<1> > tmp11_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_292_p3;
    sc_signal< sc_lv<1> > tmp14_fu_306_p2;
    sc_signal< sc_lv<1> > tmp13_fu_300_p2;
    sc_signal< sc_lv<24> > tmp_20_fu_244_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_118_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_136_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_170_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_204_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_260_p2;
    sc_signal< sc_lv<1> > tmp_77_i_fu_286_p2;
    sc_signal< sc_lv<1> > tmp_6_i_fu_312_p2;
    sc_signal< sc_lv<8> > tmp_8_7_i_cast_fu_340_p9;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_tmp10_fu_254_p2();
    void thread_tmp11_fu_274_p2();
    void thread_tmp12_fu_280_p2();
    void thread_tmp13_fu_300_p2();
    void thread_tmp14_fu_306_p2();
    void thread_tmp1_fu_198_p2();
    void thread_tmp2_fu_218_p2();
    void thread_tmp3_fu_124_p2();
    void thread_tmp4_fu_130_p2();
    void thread_tmp5_fu_224_p2();
    void thread_tmp6_fu_158_p2();
    void thread_tmp7_fu_164_p2();
    void thread_tmp8_fu_248_p2();
    void thread_tmp9_fu_192_p2();
    void thread_tmp_10_fu_74_p3();
    void thread_tmp_11_fu_82_p3();
    void thread_tmp_12_fu_90_p3();
    void thread_tmp_13_fu_98_p3();
    void thread_tmp_14_fu_142_p3();
    void thread_tmp_15_fu_150_p3();
    void thread_tmp_16_fu_176_p3();
    void thread_tmp_17_fu_184_p3();
    void thread_tmp_18_fu_210_p3();
    void thread_tmp_19_fu_236_p3();
    void thread_tmp_1_fu_112_p2();
    void thread_tmp_20_fu_244_p1();
    void thread_tmp_21_fu_266_p3();
    void thread_tmp_22_fu_292_p3();
    void thread_tmp_2_fu_118_p2();
    void thread_tmp_3_fu_230_p2();
    void thread_tmp_4_fu_50_p3();
    void thread_tmp_5_fu_136_p2();
    void thread_tmp_6_fu_260_p2();
    void thread_tmp_6_i_fu_312_p2();
    void thread_tmp_77_i_fu_286_p2();
    void thread_tmp_7_fu_58_p3();
    void thread_tmp_8_7_i_cast_fu_340_p9();
    void thread_tmp_8_7_i_fu_318_p10();
    void thread_tmp_8_fu_170_p2();
    void thread_tmp_9_fu_66_p3();
    void thread_tmp_fu_106_p2();
    void thread_tmp_s_fu_204_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
