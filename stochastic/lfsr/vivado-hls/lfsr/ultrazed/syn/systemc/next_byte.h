// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _next_byte_HH_
#define _next_byte_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct next_byte : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    next_byte(sc_module_name name);
    SC_HAS_PROCESS(next_byte);

    ~next_byte();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > r;
    sc_signal< sc_lv<4> > i_1_fu_53_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_reg_32;
    sc_signal< sc_lv<1> > exitcond_fu_47_p2;
    sc_signal< sc_lv<32> > tmp_7_fu_113_p3;
    sc_signal< sc_lv<1> > tmp_2_fu_67_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_59_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_75_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_83_p3;
    sc_signal< sc_lv<1> > p_lobit1_fu_97_p2;
    sc_signal< sc_lv<1> > tmp1_fu_91_p2;
    sc_signal< sc_lv<31> > tmp_5_fu_109_p1;
    sc_signal< sc_lv<1> > newbit_fu_103_p2;
    sc_signal< sc_lv<8> > tmp_fu_127_p1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond_fu_47_p2();
    void thread_i_1_fu_53_p2();
    void thread_newbit_fu_103_p2();
    void thread_p_lobit1_fu_97_p2();
    void thread_tmp1_fu_91_p2();
    void thread_tmp_1_fu_59_p3();
    void thread_tmp_2_fu_67_p3();
    void thread_tmp_3_fu_75_p3();
    void thread_tmp_4_fu_83_p3();
    void thread_tmp_5_fu_109_p1();
    void thread_tmp_7_fu_113_p3();
    void thread_tmp_fu_127_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
